springfox.documentation.swagger.v2.path=/api-docs
server.contextPath=/v1

#server.port=8080
##8080 localhost,  5000 for AWS deploy, no port for Cloud Foundry

# enable HTTPS
# https://www.thomasvitale.com/https-spring-boot-ssl-certificate/
##
server.port: 8443
# Tell Spring Security (if used) to require requests over HTTPS (block HTTP)
##
security.require-ssl=true
# expect to find keystore.p12 cert file in the classpath (resource folder)
# other option is to look for it in the local keystore
##
server.ssl.key-store: classpath:devlocalhost.p12
##
server.ssl.key-store-password: devlocalhost
##
server.ssl.keyStoreType: PKCS12
##
server.ssl.keyAlias: devlocalhost

# we are disablign Spring Boot Security Autoconfig and creating our own security config classes.
# this is if we are adding spring-boot-starter-security to our POM
# see:
# http://www.baeldung.com/spring-boot-security-autoconfiguration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration

spring.jackson.date-format=io.swagger.RFC3339DateFormat
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

# Actuators / devops
# spring-boot-starter-actuator config
# /metrics /health /beans /info /trace /dump /endpoints
# https://localhost:8443/v1/devops/metrics
# http://springserver.cfapps.io/verity/core/devops/metrics
# need to set up security for this port or will fail.
# management.port=8081 
management.context-path=/devops
##endpoints.info.enabled=false
info.app.name=Verity API
# get version from POM on maven build (spring boot uses @ instead of %)
info.build.version=@project.version@

# create any info property and value / freeform
info.foo.bar.baz=1.2.3

# https://auth0.com/docs/quickstart/backend/java-spring-security
# https://manage.auth0.com/#/applications/NRg33sjYadc0xJnqZ0u6wupxhNzOM8TD/settings
#
# setting for Auth0 integration
auth0.issuer:https://verity.auth0.com/
auth0.apiAudience:https://api.verity.site/v1